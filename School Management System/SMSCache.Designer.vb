'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Public Class SMSCacheClientSyncProvider
    Inherits Microsoft.Synchronization.Data.SqlServerCe.SqlCeClientSyncProvider
    
    Public Sub New()
        MyBase.New
        Me.ConnectionString = Global.School_Management_System.My.MySettings.Default.ClientSMSConnectionString
    End Sub
    
    Public Sub New(ByVal connectionString As String)
        MyBase.New
        Me.ConnectionString = connectionString
    End Sub
End Class

Partial Public Class SMSCacheSyncAgent
    Inherits Microsoft.Synchronization.SyncAgent
    
    Private _employeeSyncTable As EmployeeSyncTable
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeSyncProviders
        Me.InitializeSyncTables
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property Employee() As EmployeeSyncTable
        Get
            Return Me._employeeSyncTable
        End Get
        Set
            Me.Configuration.SyncTables.Remove(Me._employeeSyncTable)
            Me._employeeSyncTable = value
            Me.Configuration.SyncTables.Add(Me._employeeSyncTable)
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeSyncProviders()
        'Create SyncProviders.
        Me.RemoteProvider = New SMSCacheServerSyncProvider()
        Me.LocalProvider = New SMSCacheClientSyncProvider()
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeSyncTables()
        'Create SyncTables.
        Me._employeeSyncTable = New EmployeeSyncTable()
        Me._employeeSyncTable.SyncGroup = New Microsoft.Synchronization.Data.SyncGroup("EmployeeSyncTableSyncGroup")
        Me.Configuration.SyncTables.Add(Me._employeeSyncTable)
    End Sub
    
    Partial Public Class EmployeeSyncTable
        Inherits Microsoft.Synchronization.Data.SyncTable
        
        Partial Private Sub OnInitialized()
        End Sub
        
        Public Sub New()
            MyBase.New
            Me.InitializeTableOptions
            Me.OnInitialized
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitializeTableOptions()
            Me.TableName = "Employee"
            Me.CreationOption = Microsoft.Synchronization.Data.TableCreationOption.DropExistingOrCreateNewTable
        End Sub
    End Class
End Class


Partial Public Class EmployeeSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'EmployeeSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand()
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.Employee ("& _ 
            "[EID], [FName], [MName], [LName], [BDate], [Gender], [Address1], [Address2], [Ci"& _ 
            "ty], [Zipcode], [Empdesig], [JDate], [Category], [Email], [Mobno], [PhAr], [PhNo"& _ 
            "], [Aadharno], [PANNo], [Basicsal], [HA], [DA], [Total], [Photo], [eno], [State]"& _ 
            ", [Fullname]) VALUES (@EID, @FName, @MName, @LName, @BDate, @Gender, @Address1, "& _ 
            "@Address2, @City, @Zipcode, @Empdesig, @JDate, @Category, @Email, @Mobno, @PhAr,"& _ 
            " @PhNo, @Aadharno, @PANNo, @Basicsal, @HA, @DA, @Total, @Photo, @eno, @State, @F"& _ 
            "ullname) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION("& _ 
            "object_id(N'dbo.Employee')) > @sync_last_received_anchor RAISERROR (N'SQL Server"& _ 
            " Change Tracking has cleaned up tracking information for table ''%s''. To recove"& _ 
            "r from this error, the client must reinitialize its local database and try again"& _ 
            "',16,3,N'dbo.Employee') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EID", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FName", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@MName", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LName", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BDate", System.Data.SqlDbType.Date))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Gender", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Address1", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Address2", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@City", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Zipcode", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Empdesig", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@JDate", System.Data.SqlDbType.Date))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Category", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Email", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Mobno", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PhAr", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PhNo", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Aadharno", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PANNo", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Basicsal", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HA", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DA", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Total", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Photo", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@eno", System.Data.SqlDbType.Decimal))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@State", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Fullname", System.Data.SqlDbType.VarChar))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'EmployeeSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand()
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.Employee FROM d"& _ 
            "bo.Employee JOIN CHANGETABLE(VERSION dbo.Employee, ([EID]), (@EID)) CT  ON CT.[E"& _ 
            "ID] = dbo.Employee.[EID] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION I"& _ 
            "S NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_"& _ 
            "CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sy"& _ 
            "nc_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo."& _ 
            "Employee')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking"& _ 
            " has cleaned up tracking information for table ''%s''. To recover from this erro"& _ 
            "r, the client must reinitialize its local database and try again',16,3,N'dbo.Emp"& _ 
            "loyee') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EID", System.Data.SqlDbType.VarChar))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'EmployeeSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand()
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.Employee SET [F"& _ 
            "Name] = @FName, [MName] = @MName, [LName] = @LName, [BDate] = @BDate, [Gender] ="& _ 
            " @Gender, [Address1] = @Address1, [Address2] = @Address2, [City] = @City, [Zipco"& _ 
            "de] = @Zipcode, [Empdesig] = @Empdesig, [JDate] = @JDate, [Category] = @Category"& _ 
            ", [Email] = @Email, [Mobno] = @Mobno, [PhAr] = @PhAr, [PhNo] = @PhNo, [Aadharno]"& _ 
            " = @Aadharno, [PANNo] = @PANNo, [Basicsal] = @Basicsal, [HA] = @HA, [DA] = @DA, "& _ 
            "[Total] = @Total, [Photo] = @Photo, [eno] = @eno, [State] = @State, [Fullname] ="& _ 
            " @Fullname FROM dbo.Employee  JOIN CHANGETABLE(VERSION dbo.Employee, ([EID]), (@"& _ 
            "EID)) CT  ON CT.[EID] = dbo.Employee.[EID] WHERE (@sync_force_write = 1 OR CT.SY"& _ 
            "S_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor "& _ 
            "OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_i"& _ 
            "d_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSIO"& _ 
            "N(object_id(N'dbo.Employee')) > @sync_last_received_anchor RAISERROR (N'SQL Serv"& _ 
            "er Change Tracking has cleaned up tracking information for table ''%s''. To reco"& _ 
            "ver from this error, the client must reinitialize its local database and try aga"& _ 
            "in',16,3,N'dbo.Employee') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FName", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@MName", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LName", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@BDate", System.Data.SqlDbType.Date))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Gender", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Address1", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Address2", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@City", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Zipcode", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Empdesig", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@JDate", System.Data.SqlDbType.Date))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Category", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Email", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Mobno", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PhAr", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PhNo", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Aadharno", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@PANNo", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Basicsal", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@HA", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DA", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Total", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Photo", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@eno", System.Data.SqlDbType.Decimal))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@State", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Fullname", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EID", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'EmployeeSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[EID], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETABLE(CH"& _ 
            "ANGES dbo.Employee, @sync_last_received_anchor) CT WHERE (CT.[EID] = @EID AND CT"& _ 
            ".SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EID", System.Data.SqlDbType.VarChar))
        'EmployeeSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.Employee.[EID], [FName], [MName], [LName], [BDate], [Gender], [Address"& _ 
            "1], [Address2], [City], [Zipcode], [Empdesig], [JDate], [Category], [Email], [Mo"& _ 
            "bno], [PhAr], [PhNo], [Aadharno], [PANNo], [Basicsal], [HA], [DA], [Total], [Pho"& _ 
            "to], [eno], [State], [Fullname], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FR"& _ 
            "OM dbo.Employee JOIN CHANGETABLE(VERSION dbo.Employee, ([EID]), (@EID)) CT  ON C"& _ 
            "T.[EID] = dbo.Employee.[EID]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@EID", System.Data.SqlDbType.VarChar))
        'EmployeeSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.Employee.[EID], [FName], [MName], [LName], [B"& _ 
            "Date], [Gender], [Address1], [Address2], [City], [Zipcode], [Empdesig], [JDate],"& _ 
            " [Category], [Email], [Mobno], [PhAr], [PhNo], [Aadharno], [PANNo], [Basicsal], "& _ 
            "[HA], [DA], [Total], [Photo], [eno], [State], [Fullname] FROM dbo.Employee LEFT "& _ 
            "OUTER JOIN CHANGETABLE(CHANGES dbo.Employee, @sync_last_received_anchor) CT ON C"& _ 
            "T.[EID] = dbo.Employee.[EID] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHAN"& _ 
            "GE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.Employee.[EID], [FN"& _ 
            "ame], [MName], [LName], [BDate], [Gender], [Address1], [Address2], [City], [Zipc"& _ 
            "ode], [Empdesig], [JDate], [Category], [Email], [Mobno], [PhAr], [PhNo], [Aadhar"& _ 
            "no], [PANNo], [Basicsal], [HA], [DA], [Total], [Photo], [eno], [State], [Fullnam"& _ 
            "e] FROM dbo.Employee JOIN CHANGETABLE(CHANGES dbo.Employee, @sync_last_received_"& _ 
            "anchor) CT ON CT.[EID] = dbo.Employee.[EID] WHERE (CT.SYS_CHANGE_OPERATION = 'I'"& _ 
            " AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CH"& _ 
            "ANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CH"& _ 
            "ANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.Employee')) > @sync_last_receive"& _ 
            "d_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking informa"& _ 
            "tion for table ''%s''. To recover from this error, the client must reinitialize "& _ 
            "its local database and try again',16,3,N'dbo.Employee')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'EmployeeSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[EID] FROM CHANGETABLE(CHANGES dbo.Empl"& _ 
            "oyee, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D' AND CT"& _ 
            ".SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS N"& _ 
            "ULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN"& _ 
            "_VALID_VERSION(object_id(N'dbo.Employee')) > @sync_last_received_anchor RAISERRO"& _ 
            "R (N'SQL Server Change Tracking has cleaned up tracking information for table ''"& _ 
            "%s''. To recover from this error, the client must reinitialize its local databas"& _ 
            "e and try again',16,3,N'dbo.Employee')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'EmployeeSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.Employee.[EID], [FName], [MName], [LNa"& _ 
            "me], [BDate], [Gender], [Address1], [Address2], [City], [Zipcode], [Empdesig], ["& _ 
            "JDate], [Category], [Email], [Mobno], [PhAr], [PhNo], [Aadharno], [PANNo], [Basi"& _ 
            "csal], [HA], [DA], [Total], [Photo], [eno], [State], [Fullname] FROM dbo.Employe"& _ 
            "e JOIN CHANGETABLE(CHANGES dbo.Employee, @sync_last_received_anchor) CT ON CT.[E"& _ 
            "ID] = dbo.Employee.[EID] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_"& _ 
            "VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SY"& _ 
            "S_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSI"& _ 
            "ON(object_id(N'dbo.Employee')) > @sync_last_received_anchor RAISERROR (N'SQL Ser"& _ 
            "ver Change Tracking has cleaned up tracking information for table ''%s''. To rec"& _ 
            "over from this error, the client must reinitialize its local database and try ag"& _ 
            "ain',16,3,N'dbo.Employee')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Employee"
    End Sub
End Class

Partial Public Class SMSCacheServerSyncProvider
    Inherits Microsoft.Synchronization.Data.Server.DbServerSyncProvider
    
    Private _employeeSyncAdapter As EmployeeSyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Dim connectionString As String = Global.School_Management_System.My.MySettings.Default.SMSConnectionString
        Me.InitializeConnection(connectionString)
        Me.InitializeSyncAdapters
        Me.InitializeNewAnchorCommand
        Me.OnInitialized
    End Sub
    
    Public Sub New(ByVal connectionString As String)
        MyBase.New
        Me.InitializeConnection(connectionString)
        Me.InitializeSyncAdapters
        Me.InitializeNewAnchorCommand
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property EmployeeSyncAdapter() As EmployeeSyncAdapter
        Get
            Return Me._employeeSyncAdapter
        End Get
        Set
            Me._employeeSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeConnection(ByVal connectionString As String)
        Me.Connection = New System.Data.SqlClient.SqlConnection(connectionString)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeSyncAdapters()
        'Create SyncAdapters.
        Me._employeeSyncAdapter = New EmployeeSyncAdapter()
        Me.SyncAdapters.Add(Me._employeeSyncAdapter)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeNewAnchorCommand()
        'selectNewAnchorCmd command.
        Me.SelectNewAnchorCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectNewAnchorCommand.CommandText = "Select @sync_new_received_anchor = CHANGE_TRACKING_CURRENT_VERSION()"
        Me.SelectNewAnchorCommand.CommandType = System.Data.CommandType.Text
        Dim selectnewanchorcommand_sync_new_received_anchorParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt)
        selectnewanchorcommand_sync_new_received_anchorParameter.Direction = System.Data.ParameterDirection.Output
        Me.SelectNewAnchorCommand.Parameters.Add(selectnewanchorcommand_sync_new_received_anchorParameter)
    End Sub
End Class
